language: php

dist: trusty
# Change to `true' to enable debug mode
sudo: false

php:
  - 5.5
  - 5.6
  - 7.0
  - 7.1
  - 7.2

git:
  depth: 1

compiler:
  - gcc
  - clang

env:
  global:
    - LD_LIBRARY_PATH="$TRAVIS_BUILD_DIR/build/lib":$LD_LIBRARY_PATH
    - LIBRARY_PATH="$TRAVIS_BUILD_DIR/build/lib":$LIBRARY_PATH
    - C_INCLUDE_PATH="$TRAVIS_BUILD_DIR/build/include"
    - CFLAGS="-g3 -O0 -Wall -fvisibility=hidden"
    - USE_ZEND_ALLOC=0
    - ZEND_DONT_UNLOAD_MODULES=1
    - REPORT_EXIT_STATUS=1
    - PATH="${HOME}/bin:${PATH}"
    - RE2C_VERSION="1.0.3"
    - ZEPHIR_PARSER_VERSION="v1.1.2"
  matrix:
    - CC="gcc"
    - CC="clang"

matrix:
  fast_finish: true
  allow_failures:
    - php: nightly
  exclude:
    - env: CC="gcc"
      compiler: clang
    - env: CC="clang"
      compiler: gcc
  include:
    - env: CC="gcc"
      php: nightly
      compiler: gcc
    - env: CC="clang"
      php: nightly
      compiler: clang
    - env: CPPFLAGS=-DZEPHIR_RELEASE CC=gcc
      php: 7.1
    - env: CPPFLAGS=-DZEPHIR_RELEASE CC=clang
      php: 7.1
    - env: CPPFLAGS=-DZEPHIR_RELEASE CC=gcc
      php: 7.2
    - env: CPPFLAGS=-DZEPHIR_RELEASE CC=clang
      php: 7.2

cache:
  apt: true
  ccache: true
  timeout: 604800
  directories:
    - $HOME/.ccache
    - $HOME/.composer/cache
    - $HOME/.local/opt/re2c
    - $HOME/.cache/re2c

before_install:
  - if [[ ! -z "${GH_TOKEN}" ]]; then composer config github-oauth.github.com ${GH_TOKEN}; echo "Configured Github token"; fi;
  - $CC --version
  - export PHP_MAJOR="$(`phpenv which php` -r 'echo phpversion();' | cut -d '.' -f 1)"
  - export PHP_MINOR="$(`phpenv which php` -r 'echo phpversion();' | cut -d '.' -f 2)"

install:
  - composer install --prefer-source --no-suggest
  - |
        if [ "${PHP_MAJOR}.${PHP_MINOR}" != "5.5" ]; then
            composer remove --dev phpunit/phpunit
            composer require -q -n --dev --no-progress --prefer-dist --no-suggest "phpunit/phpunit:5.7.*"
        fi
  - bash ./unit-tests/ci/install-re2c $RE2C_VERSION
  - bash ./unit-tests/ci/install_zephir_parser.sh
  - ./install

before_script:
  - $(phpenv which php) compiler.php help
  - $(phpenv which php) compiler.php generate -Wnonexistent-function -Wnonexistent-class -Wunused-variable
  - $(phpenv which php) compiler.php stubs
  - $(phpenv which php) compiler.php api
  - (cd ext; $(phpenv which phpize) && ./configure --silent --with-php-config=$(phpenv which php-config) --enable-test && make -j"$(getconf _NPROCESSORS_ONLN)" && make --silent install && phpenv config-add ../unit-tests/ci/test.ini)
  #- ls -1 `$(phpenv which php-config) --extension-dir`
  #- phpenv versions
  - ulimit -c unlimited || true
  # Uncomment to setting core dump
  #- echo '/tmp/core_%e.%p' | sudo tee /proc/sys/kernel/core_pattern &> /dev/null
  #- sudo chmod +s $(which gdb)

script:
  - echo 'variables_order=EGPCS' >> "$(phpenv root)/versions/$(phpenv version-name)/etc/php.ini"
  - vendor/bin/phpcs --standard=PSR2 --report=emacs --extensions=php --warning-severity=0 Library/ unit-tests/Extension/ unit-tests/Zephir/
  - |
      valgrind \
        --read-var-info=yes \
        --error-exitcode=1 \
        --fullpath-after= \
        --track-origins=yes \
        --leak-check=full \
        --num-callers=20 \
        --run-libc-freeres=no \
        ./unit-tests/phpunit \
          --not-exit \
          -c phpunit.xml.dist \
          --debug \
          unit-tests/
  - $(phpenv which php) unit-tests/microbench.php

after_success:
  - if [[ ! -z "${CODECOV_TOKEN}" ]]; then bash <(curl -s https://codecov.io/bash); fi;

after_failure:
  #  Uncomment to debug core dump
  # - ./unit-tests/ci/after_failure.sh
  - $(phpenv which php) -v
  - $(phpenv which php) -m
  - $(phpenv which php) -i

addons:
  apt:
    packages:
      - valgrind
      - gdb
